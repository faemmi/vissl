name: test

on: [push]

jobs:
  install:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: false
          installer-parallel: true
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          poetry install --only=main
          pip install -r requirements-cpu.txt
          pip list

  test-unit:
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
      - name: Install dependencies
        run: |
          pip install pytest pytest-cov pytest-custom-exit-code
      - name: Run tests
        run: |
          pytest \
            --cov=vissl \
            --cov-report term \
            --cov-report html:./htmlcov \
            --suppress-no-test-exit-code \
            --junitxml=./report/pytest.xml \
            tests/unit

  test-train:
    needs: install
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
      - name: List configs
        run: |
          ls -al configs/config
      - name: Run training
        run: |
          python tools/run_distributed_engines.py \
            config=local \
            config.DATA.TRAIN.DATASET_NAMES='["ci_test_dataset"]' \
            config.DATA.TRAIN.BATCHSIZE_PER_REPLICA=1 \
            config.OPTIMIZER.num_epochs=1 \
            config.LOSS.deepclusterv2_loss.num_train_samples=1 \
            config.LOSS.deepclusterv2_loss.num_clusters='[1,1,1]' \
            config.LOSS.deepclusterv2_loss.kmeans_iters=2 \
            config.LOSS.deepclusterv2_loss.output_dir=$PWD/results \
            config.HOOKS.TENSORBOARD_SETUP.LOG_DIR=$PWD/results \
            config.CHECKPOINT.DIR=$PWD/results \
            config.VERBOSE=True \
            config.TRACK_TO_MANTIK=False
      - name: List created files
        run: |
          ls -alR results

